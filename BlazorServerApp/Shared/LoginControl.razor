
@using System.Web;
@inject IRecipeDataLoader _dataLoader
@inject NavigationManager navMangaer
    <AuthorizeView>
        <Authorized>
            <b>Hello, @context.User.Identity.Name!</b>
            <a class="btn btn-primary"
               href="/logout?returnUrl=/"
               target="_top">Logout</a>
        </Authorized>
        <NotAuthorized>
            @*@if (error)
            {
                <p class="alert alert-danger"> Unable to sign you in.</p> <p><a href="/userStuck/passwordReset" class="btn btn-danger">Forgot your password?</a></p>
            }*@

            <EditForm OnValidSubmit="Authenticate" Context="LoginComponent" Model="loginForm" style =" display: flex; flex-direction: column; align-content: stretch; flex-wrap: nowrap; align-items: center; }">

                <DataAnnotationsValidator />
                <InputText type="text"
                           placeholder="User Name"
                           @bind-Value="@loginForm.Username" style="width:100%"/>
                &nbsp;&nbsp;
                <InputText type="password"
                           placeholder="Password"
                           @bind-Value="@loginForm.Password"  style="width:100%"/>
                <button style="width:100%;margin:5px" type="submit" class="btn btn-primary">Login</button> @*style="margin-left:5px;"*@



            </EditForm>
        </NotAuthorized>
    </AuthorizeView>
<ErrorNotification Show="@error" ErrorMessage="Unable to log you in."> </ErrorNotification>
    @code {
        LoginForm loginForm = new LoginForm();
        bool error = false;

        private string encode(string param)
        {
            return HttpUtility.UrlEncode(param);
        }

        private async Task Authenticate()
        {
            try
            {
                User user = await _dataLoader.GetUserFromDatabase(loginForm.Username);
                string sha512 = BlazorServerApp.Models.User.CreateSHAHash(loginForm.Password);
                if (user != null && user.SHA512 == sha512)
                {
                    
                    error = false;
                    var uri = navMangaer.ToAbsoluteUri(navMangaer.Uri);
                    navMangaer.NavigateTo($"/Login?paramUsername={@encode(loginForm.Username)}&paramPassword={@encode(loginForm.Password)}&paramReturnURL={uri.AbsolutePath}", true);
                }
                else
                {

                    error = true;
                    this.StateHasChanged();
                }
            }
            catch
            {
                error = true;
            }
        }
    }

