<div>
<h6>Only show ingredients with these tags:</h6>
<div class="container-fluid" style="padding-left:0;display: flex; flex-direction: row; align-items: flex-start;flex-wrap: wrap;">
    @foreach (string key in selectedBoxes.Keys)
    {
        
    <div style="background-color: rgba(0,0,0,.03); margin-bottom:0;margin-left:5px; border-radius:5px;"> <p style="margin-bottom: 0px;"><input type="checkbox" @bind="selectedBoxes[key]" @onclick="(()=>HandleCheckboxChange(key))" />&nbsp;@key  &nbsp;<i class="oi oi-tag"> </i>&nbsp;</p></div>
    }
    <btn class="btn btn-primary" @onclick="SetAllFalse">Clear tags</btn><btn class="btn btn-primary" @onclick="SetAllTrue">Activate all tags</btn>
</div>
</div>
@code {

    [Parameter] public EventCallback<Ingredient.Type> selectedTypeChanged { get; set; }

    private Ingredient.Type _type;
    [Parameter]
    public Ingredient.Type selectedType
    {
        get => _type; set
        {
            _type = value;
            StateHasChanged();
        }
    }
    Dictionary<string, bool> selectedBoxes = new Dictionary<string, bool>();


    private void HandleCheckboxChange(string key)
    {
        selectedBoxes[key] = !selectedBoxes[key];
        Ingredient.Type type = (Ingredient.Type)Enum.Parse(typeof(Ingredient.Type), key, true);
        if (selectedBoxes[key])
        {
            selectedType |= type; //Select item
        }
        else
        {
            selectedType &= ~type; //Deselect item
        }
        selectedTypeChanged.InvokeAsync(selectedType);
    }


    protected override async Task OnInitializedAsync()
    {
        foreach (Ingredient.Type flagToCheck in Enum.GetValues(typeof(Ingredient.Type)))
        {
            if (selectedType.HasFlag(flagToCheck) )
            {
                selectedBoxes.Add(flagToCheck.ToString(), true);
            }
            else
            {
                selectedBoxes.Add(flagToCheck.ToString(), false);
            }
        }
        await selectedTypeChanged.InvokeAsync(selectedType);
    }

    private async void SetAllFalse()
    {
        foreach(string key in selectedBoxes.Keys)
        {
            selectedBoxes[key]= false;
        }
        selectedBoxes["None"] = true;
        selectedType = Ingredient.Type.None;
        await selectedTypeChanged.InvokeAsync(selectedType);
    }
    private async void SetAllTrue()
    {
        foreach (string key in selectedBoxes.Keys)
        {
            selectedBoxes[key] = true;
        }
        selectedBoxes["None"] = true;
        selectedType = Ingredient.AllSelected;
        await selectedTypeChanged.InvokeAsync(selectedType);
    }
}
